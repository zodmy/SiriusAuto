import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

const productImages = [
  '147451.webp',
  '2021-05-04_00-00-30_8713970.webp',
  '2022-06-05_21-30-43_13292159.webp',
  '2022-21-02_23-30-54_13243547.webp',
  '2022-22-06_16-31-13_13336576.webp',
  '2023-05-09_16-39-51_15287559.webp',
  '2023-05-09_18-40-57_15335671.webp',
  '2023-12-05_16-00-09_147227.jpg',
  '2023-22-07_21-36-24_14711888.jpg',
  '2023-22-07_21-36-25_14711889.webp',
  '2023-23-08_16-30-45_15153945.webp',
  '2023-25-08_18-00-31_15158679.webp',
  '2023-27-02_12-00-25_14402181.webp',
  '2023-29-11_12-31-04_15785204.webp',
  '2024-05-02_14-30-45_15880180.webp',
  '2024-14-11_10-00-25_17397252.webp',
  '2024-23-12_09-31-43_17459774.webp',
  '2024-26-04_17-30-51_16614523.webp',
  '2025-10-01_11-31-40_15293828.webp',
  '45__cCEJNOI.webp',
  '45__esVoJov.webp',
  '45__INQtp4L.webp',
  '45__iqA2JLI.webp',
  '45__jbmWD3S.jpg',
  '45__mITMHAU.webp',
  '45__mJZdCdT.webp',
  '45__OBzvUVN.webp',
  '45__PyuAJkm.webp',
  '45__sSqVR7r.webp',
  '45__ubyRKpn.webp',
  '45__Vyh8DP8.webp',
  '45__ZK58CDY.webp',
  '6856701_3136470_DtHmy5z.jpg',
  '7244436_12072969.webp',
  '7609798_10239076_lKQchXR.jpg',
  '7718873_57817715.webp',
  '7749561_11319725.webp',
  '7750289_24177638.webp',
  '7885238_1969127.webp'
]
let imageIndex = 0

function getNextProductImage() {
  const imageName = productImages[imageIndex % productImages.length]
  imageIndex++
  return `/images/products/${imageName}`
}

async function main() {
  console.log('üå± –û—á–∏—â–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...')

  await prisma.compatibility.deleteMany()
  await prisma.carEngine.deleteMany()
  await prisma.carBodyType.deleteMany()
  await prisma.carYear.deleteMany()
  await prisma.carModel.deleteMany()
  await prisma.carMake.deleteMany()
  await prisma.productOption.deleteMany()
  await prisma.review.deleteMany()
  await prisma.orderItem.deleteMany()
  await prisma.order.deleteMany()
  await prisma.product.deleteMany()
  await prisma.category.deleteMany()
  await prisma.manufacturer.deleteMany()

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π...')

  await Promise.all([
    prisma.category.create({
      data: {
        name: '–ó–∞–ø—á–∞—Å—Ç–∏–Ω–∏ –¥–≤–∏–≥—É–Ω–∞',
        children: {
          create: [
            { name: '–§—ñ–ª—å—Ç—Ä–∏' },
            { name: '–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è' },
            { name: '–†–µ–º–µ–Ω—ñ —Ç–∞ –ª–∞–Ω—Ü—é–≥–∏ –ì–†–ú' },
            { name: '–ú–∞—Å–ª–∞ —Ç–∞ —Ä—ñ–¥–∏–Ω–∏' },
            { name: '–ü—Ä–æ–∫–ª–∞–¥–∫–∏ —Ç–∞ —Å–∞–ª—å–Ω–∏–∫–∏' },
            { name: '–ü–æ—Ä—à–Ω—ñ —Ç–∞ —Ü–∏–ª—ñ–Ω–¥—Ä–∏' },
            { name: '–ù–∞—Å–æ—Å–∏ –≤–æ–¥—è–Ω—ñ (–ø–æ–º–ø–∏)' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–ì–∞–ª—å–º—ñ–≤–Ω–∞ —Å–∏—Å—Ç–µ–º–∞',
        children: {
          create: [
            { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏' },
            { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –¥–∏—Å–∫–∏' },
            { name: '–ì–∞–ª—å–º—ñ–≤–Ω–∞ —Ä—ñ–¥–∏–Ω–∞' },
            { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ —à–ª–∞–Ω–≥–∏' },
            { name: '–°—É–ø–ø–æ—Ä—Ç–∏ —Ç–∞ —Ä–µ–º–∫–æ–º–ø–ª–µ–∫—Ç–∏' },
            { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ —Ü–∏–ª—ñ–Ω–¥—Ä–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–ü—ñ–¥–≤—ñ—Å–∫–∞ —Ç–∞ —Ä—É–ª—å–æ–≤–µ',
        children: {
          create: [
            { name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–∏ —Ç–∞ —Å—Ç—ñ–π–∫–∏' },
            { name: '–ü—Ä—É–∂–∏–Ω–∏ –ø—ñ–¥–≤—ñ—Å–∫–∏' },
            { name: '–í–∞–∂–µ–ª—ñ —Ç–∞ —Å–∞–π–ª–µ–Ω—Ç–±–ª–æ–∫–∏' },
            { name: '–ö—É–ª—å–æ–≤—ñ –æ–ø–æ—Ä–∏' },
            { name: '–†—É–ª—å–æ–≤—ñ —Ç—è–≥–∏ —Ç–∞ –Ω–∞–∫–æ–Ω–µ—á–Ω–∏–∫–∏' },
            { name: '–°—Ç–∞–±—ñ–ª—ñ–∑–∞—Ç–æ—Ä–∏ —Ç–∞ –≤—Ç—É–ª–∫–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–ï–ª–µ–∫—Ç—Ä–∏–∫–∞ —Ç–∞ –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è',
        children: {
          create: [
            { name: '–ê–∫—É–º—É–ª—è—Ç–æ—Ä–∏' },
            { name: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∏ —Ç–∞ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—á—ñ' },
            { name: '–°—Ç–∞—Ä—Ç–µ—Ä–∏ —Ç–∞ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—á—ñ' },
            { name: '–õ–∞–º–ø–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω—ñ' },
            { name: '–ó–∞–ø–æ–±—ñ–∂–Ω–∏–∫–∏ —Ç–∞ —Ä–µ–ª–µ' },
            { name: '–î–∞—Ç—á–∏–∫–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–ö—É–∑–æ–≤–Ω—ñ –¥–µ—Ç–∞–ª—ñ',
        children: {
          create: [
            { name: '–§–∞—Ä–∏ —Ç–∞ –ª—ñ—Ö—Ç–∞—Ä—ñ' },
            { name: '–î–∑–µ—Ä–∫–∞–ª–∞ —Ç–∞ —Å–∫–ª–∞' },
            { name: '–ë–∞–º–ø–µ—Ä–∏ —Ç–∞ –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è' },
            { name: '–†–µ—à—ñ—Ç–∫–∏ —Ä–∞–¥—ñ–∞—Ç–æ—Ä–∞ —Ç–∞ –º–æ–ª–¥–∏–Ω–≥–∏' },
            { name: '–ö—Ä–∏–ª–∞ —Ç–∞ –ø—ñ–¥–∫—Ä–∏–ª–∫–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–¢—Ä–∞–Ω—Å–º—ñ—Å—ñ—è',
        children: {
          create: [
            { name: '–ö–æ–º–ø–ª–µ–∫—Ç–∏ –∑—á–µ–ø–ª–µ–Ω–Ω—è' },
            { name: '–ú–∞—Ö–æ–≤–∏–∫–∏' },
            { name: '–ü—ñ–¥—à–∏–ø–Ω–∏–∫–∏ –≤–∏–∂–∏–º–Ω—ñ' },
            { name: '–®–†–£–°–∏ —Ç–∞ –ø–∏–ª—å–æ–≤–∏–∫–∏' },
            { name: '–ö–∞—Ä–¥–∞–Ω–Ω—ñ –≤–∞–ª–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–°–∏—Å—Ç–µ–º–∞ –æ—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è —Ç–∞ –æ–ø–∞–ª–µ–Ω–Ω—è',
        children: {
          create: [
            { name: '–†–∞–¥—ñ–∞—Ç–æ—Ä–∏ –æ—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è' },
            { name: '–¢–µ—Ä–º–æ—Å—Ç–∞—Ç–∏' },
            { name: '–í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–∏ —Ä–∞–¥—ñ–∞—Ç–æ—Ä–∞' },
            { name: '–†–∞–¥—ñ–∞—Ç–æ—Ä–∏ –ø—ñ—á–∫–∏' }
          ]
        }
      }
    })
  ])

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤...')

  const manufacturers = await Promise.all([
    prisma.manufacturer.create({ data: { name: 'Bosch' } }),
    prisma.manufacturer.create({ data: { name: 'Mann Filter' } }),
    prisma.manufacturer.create({ data: { name: 'NGK' } }),
    prisma.manufacturer.create({ data: { name: 'Gates' } }),
    prisma.manufacturer.create({ data: { name: 'Castrol' } }),
    prisma.manufacturer.create({ data: { name: 'Brembo' } }),
    prisma.manufacturer.create({ data: { name: 'Sachs' } }),
    prisma.manufacturer.create({ data: { name: 'Monroe' } }),
    prisma.manufacturer.create({ data: { name: 'Varta' } }),
    prisma.manufacturer.create({ data: { name: 'Hella' } }),
    prisma.manufacturer.create({ data: { name: 'Mobil 1' } }),
    prisma.manufacturer.create({ data: { name: 'Shell' } }),
    prisma.manufacturer.create({ data: { name: 'Denso' } }),
    prisma.manufacturer.create({ data: { name: 'Valeo' } }),
    prisma.manufacturer.create({ data: { name: 'Continental' } }),
    prisma.manufacturer.create({ data: { name: 'Febi Bilstein' } }),
    prisma.manufacturer.create({ data: { name: 'Lemf√∂rder' } }),
    prisma.manufacturer.create({ data: { name: 'SKF' } }),
    prisma.manufacturer.create({ data: { name: 'TRW' } }),
    prisma.manufacturer.create({ data: { name: 'Kayaba (KYB)' } })
  ])

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Ä–æ–∫ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤...')

  await Promise.all([
    prisma.carMake.create({
      data: {
        name: 'Toyota',
        models: {
          create: [
            {
              name: 'Camry',
              years: {
                create: [
                  {
                    year: 2018,
                    bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '2.0L I4' }, { name: '2.5L I4 Hybrid' }, { name: '3.5L V6' }] } }] }
                  },
                  {
                    year: 2019,
                    bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '2.0L I4' }, { name: '2.5L I4 Hybrid' }, { name: '3.5L V6' }] } }] }
                  },
                  {
                    year: 2020,
                    bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '2.0L I4' }, { name: '2.5L I4 Hybrid' }, { name: '3.5L V6' }] } }] }
                  }
                ]
              }
            },
            {
              name: 'RAV4',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '2.0L I4' }, { name: '2.5L I4 Hybrid' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '2.0L I4' }, { name: '2.5L I4 Hybrid' }] } }] } }
                ]
              }
            },
            {
              name: 'Corolla',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '1.8L I4' }, { name: '1.8L I4 Hybrid' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.2L Turbo' }, { name: '2.0L Hybrid' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'BMW',
        models: {
          create: [
            {
              name: 'X5',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '3.0L I6 Turbo' }, { name: '4.4L V8 Turbo' }] } }] } },
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '3.0L I6 Turbo' }, { name: '4.4L V8 Turbo' }, { name: 'M50d 3.0L I6 Quad-Turbo Diesel' }] } }] } }
                ]
              }
            },
            {
              name: '3 Series',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '2.0L I4 Turbo' }, { name: '3.0L I6 Turbo' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª (Touring)', engines: { create: [{ name: '2.0L I4 Turbo Diesel' }, { name: '3.0L I6 Turbo' }] } }] } }
                ]
              }
            },
            {
              name: 'X3',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '2.0L I4 Turbo' }, { name: '3.0L I6 Turbo' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: 'xDrive30e 2.0L I4 PHEV' }, { name: 'M40i 3.0L I6 Turbo' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Volkswagen',
        models: {
          create: [
            {
              name: 'Golf',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.4L TSI' }, { name: '2.0L TSI (GTI)' }] } }] } },
                  { year: 2019, bodyTypes: { create: [{ name: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª (Variant)', engines: { create: [{ name: '1.5L TSI' }, { name: '2.0L TDI' }] } }] } }
                ]
              }
            },
            {
              name: 'Passat',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '1.8L TSI' }, { name: '2.0L TSI' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª (Alltrack)', engines: { create: [{ name: '2.0L TSI 4Motion' }] } }] } }
                ]
              }
            },
            {
              name: 'Tiguan',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.4L TSI' }, { name: '2.0L TDI' }] } }] } },
                  { year: 2021, bodyTypes: { create: [{ name: 'SUV (Allspace)', engines: { create: [{ name: '2.0L TSI' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Mercedes-Benz',
        models: {
          create: [
            {
              name: 'C-Class',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: 'C180 1.5L I4 Turbo' }, { name: 'C300 2.0L I4 Turbo' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–ö—É–ø–µ', engines: { create: [{ name: 'C200 1.5L I4 EQ Boost' }, { name: 'AMG C43 3.0L V6 BiTurbo' }] } }] } }
                ]
              }
            },
            {
              name: 'GLE',
              years: {
                create: [
                  { year: 2020, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: 'GLE 300d 2.0L I4 Diesel' }, { name: 'GLE 450 3.0L I6 Turbo EQ Boost' }] } }] } }
                ]
              }
            },
            {
              name: 'A-Class',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: 'A180 1.33L I4 Turbo' }, { name: 'A250 2.0L I4 Turbo' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Audi',
        models: {
          create: [
            {
              name: 'A4',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '2.0L TFSI' }, { name: '3.0L TDI' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª (Avant)', engines: { create: [{ name: '40 TFSI 2.0L' }, { name: '45 TFSI quattro 2.0L' }] } }] } }
                ]
              }
            },
            {
              name: 'Q5',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '2.0L TFSI' }, { name: '3.0L TDI' }] } }] } },
                  { year: 2021, bodyTypes: { create: [{ name: 'Sportback', engines: { create: [{ name: '45 TFSI quattro 2.0L' }, { name: '50 TDI quattro 3.0L' }] } }] } }
                ]
              }
            },
            {
              name: 'A6',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '45 TFSI 2.0L' }, { name: '55 TFSI 3.0L V6' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Ford',
        models: {
          create: [
            {
              name: 'Focus',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.0L EcoBoost' }, { name: '1.5L TDCi Diesel' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª', engines: { create: [{ name: '1.5L EcoBoost' }, { name: '2.0L EcoBlue Diesel' }] } }] } }
                ]
              }
            },
            {
              name: 'Kuga',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.5L EcoBoost' }, { name: '2.0L TDCi Diesel' }] } }] } },
                  { year: 2021, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '2.5L FHEV (Hybrid)' }, { name: '1.5L EcoBlue Diesel' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Skoda',
        models: {
          create: [
            {
              name: 'Octavia',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–õ—ñ—Ñ—Ç–±–µ–∫', engines: { create: [{ name: '1.4L TSI' }, { name: '2.0L TDI' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª (Combi)', engines: { create: [{ name: '1.5L TSI e-TEC (Mild Hybrid)' }, { name: '2.0L TDI Evo' }] } }] } }
                ]
              }
            },
            {
              name: 'Kodiaq',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.5L TSI' }, { name: '2.0L TDI 4x4' }] } }] } },
                  { year: 2021, bodyTypes: { create: [{ name: 'SUV (RS)', engines: { create: [{ name: '2.0L TSI 245hp' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Honda',
        models: {
          create: [
            {
              name: 'Civic',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '1.5L VTEC Turbo' }, { name: '2.0L i-VTEC' }] } }] } },
                  { year: 2019, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.0L VTEC Turbo' }, { name: '1.6L i-DTEC Diesel' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª', engines: { create: [{ name: '1.5L VTEC Turbo' }] } }] } }
                ]
              }
            },
            {
              name: 'CR-V',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.5L VTEC Turbo' }, { name: '2.0L i-MMD Hybrid' }] } }] } },
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.5L VTEC Turbo AWD' }, { name: '2.0L i-MMD Hybrid AWD' }] } }] } }
                ]
              }
            },
            {
              name: 'Accord',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '1.5L VTEC Turbo' }, { name: '2.0L i-VTEC Hybrid' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Hyundai',
        models: {
          create: [
            {
              name: 'Elantra',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '1.6L GDI' }, { name: '2.0L Nu GDI' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '1.6L Turbo GDI' }, { name: '2.0L GDI CVT' }] } }] } }
                ]
              }
            },
            {
              name: 'Tucson',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.6L T-GDI' }, { name: '2.0L CRDI Diesel' }] } }] } },
                  { year: 2021, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.6L T-GDI Hybrid' }, { name: '2.5L GDI' }] } }] } }
                ]
              }
            },
            {
              name: 'i30',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.4L T-GDI' }, { name: '1.6L CRDI' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Kia',
        models: {
          create: [
            {
              name: 'Ceed',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.0L T-GDI' }, { name: '1.6L CRDI' }] } }] } },
                  { year: 2019, bodyTypes: { create: [{ name: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª', engines: { create: [{ name: '1.4L T-GDI' }, { name: '1.6L CRDI' }] } }] } }
                ]
              }
            },
            {
              name: 'Sportage',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.6L T-GDI' }, { name: '2.0L CRDI' }] } }] } },
                  { year: 2021, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.6L T-GDI Hybrid' }, { name: '2.0L CRDI AWD' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Nissan',
        models: {
          create: [
            {
              name: 'Qashqai',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.2L DIG-T' }, { name: '1.5L dCi Diesel' }] } }] } },
                  { year: 2021, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.3L DIG-T' }, { name: 'e-POWER 1.5L Hybrid' }] } }] } }
                ]
              }
            },
            {
              name: 'X-Trail',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.3L DIG-T' }, { name: '1.7L dCi Diesel' }] } }] } }
                ]
              }
            },
            {
              name: 'Micra',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '0.9L IG-T' }, { name: '1.5L dCi' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Peugeot',
        models: {
          create: [
            {
              name: '308',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.2L PureTech' }, { name: '1.5L BlueHDi' }] } }] } },
                  { year: 2021, bodyTypes: { create: [{ name: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª', engines: { create: [{ name: '1.2L PureTech' }, { name: '1.5L BlueHDi' }] } }] } }
                ]
              }
            },
            {
              name: '3008',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.2L PureTech' }, { name: '1.6L PureTech' }] } }] } }
                ]
              }
            },
            {
              name: '508',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: '–°–µ–¥–∞–Ω', engines: { create: [{ name: '1.6L PureTech' }, { name: '2.0L BlueHDi' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Renault',
        models: {
          create: [
            {
              name: 'Clio',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '0.9L TCe' }, { name: '1.5L dCi' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.0L TCe' }, { name: '1.3L TCe' }] } }] } }
                ]
              }
            },
            {
              name: 'Megane',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.2L TCe' }, { name: '1.5L dCi' }] } }] } },
                  { year: 2019, bodyTypes: { create: [{ name: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª', engines: { create: [{ name: '1.3L TCe' }, { name: '1.5L Blue dCi' }] } }] } }
                ]
              }
            },
            {
              name: 'Kadjar',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.3L TCe' }, { name: '1.5L Blue dCi' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Opel',
        models: {
          create: [
            {
              name: 'Astra',
              years: {
                create: [
                  { year: 2018, bodyTypes: { create: [{ name: '–•–µ—Ç—á–±–µ–∫', engines: { create: [{ name: '1.0L Turbo' }, { name: '1.6L CDTI' }] } }] } },
                  { year: 2020, bodyTypes: { create: [{ name: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª', engines: { create: [{ name: '1.2L Turbo' }, { name: '1.5L Diesel' }] } }] } }
                ]
              }
            },
            {
              name: 'Crossland X',
              years: {
                create: [
                  { year: 2019, bodyTypes: { create: [{ name: 'SUV', engines: { create: [{ name: '1.2L Turbo' }, { name: '1.5L Diesel' }] } }] } }
                ]
              }
            }
          ]
        }
      }
    })
  ])

  const filterCategory = await prisma.category.findFirst({ where: { name: '–§—ñ–ª—å—Ç—Ä–∏' } })
  const sparkPlugsCategory = await prisma.category.findFirst({ where: { name: '–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è' } })
  const brakePadsCategory = await prisma.category.findFirst({ where: { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏' } })
  const brakeDiscsCategory = await prisma.category.findFirst({ where: { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –¥–∏—Å–∫–∏' } })
  const oilCategory = await prisma.category.findFirst({ where: { name: '–ú–∞—Å–ª–∞ —Ç–∞ —Ä—ñ–¥–∏–Ω–∏' } })
  const batteryCategory = await prisma.category.findFirst({ where: { name: '–ê–∫—É–º—É–ª—è—Ç–æ—Ä–∏' } })
  const shockAbsorberCategory = await prisma.category.findFirst({ where: { name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–∏ —Ç–∞ —Å—Ç—ñ–π–∫–∏' } })
  const beltsCategory = await prisma.category.findFirst({ where: { name: '–†–µ–º–µ–Ω—ñ —Ç–∞ –ª–∞–Ω—Ü—é–≥–∏ –ì–†–ú' } })
  const lampsCategory = await prisma.category.findFirst({ where: { name: '–õ–∞–º–ø–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω—ñ' } })
  const waterPumpsCategory = await prisma.category.findFirst({ where: { name: '–ù–∞—Å–æ—Å–∏ –≤–æ–¥—è–Ω—ñ (–ø–æ–º–ø–∏)' } })
  const gasketCategory = await prisma.category.findFirst({ where: { name: '–ü—Ä–æ–∫–ª–∞–¥–∫–∏ —Ç–∞ —Å–∞–ª—å–Ω–∏–∫–∏' } })
  const thermostatCategory = await prisma.category.findFirst({ where: { name: '–¢–µ—Ä–º–æ—Å—Ç–∞—Ç–∏' } })
  const generatorCategory = await prisma.category.findFirst({ where: { name: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∏ —Ç–∞ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—á—ñ' } })
  const clutchCategory = await prisma.category.findFirst({ where: { name: '–ö–æ–º–ø–ª–µ–∫—Ç–∏ –∑—á–µ–ø–ª–µ–Ω–Ω—è' } })

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤...')

  const products = await Promise.all([
    prisma.product.create({
      data: {
        name: '–ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Bosch S0123',
        description: '–í–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–π –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –¥–ª—è –±—ñ–ª—å—à–æ—Å—Ç—ñ —è–ø–æ–Ω—Å—å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤. –ó–∞–±–µ–∑–ø–µ—á—É—î –æ–ø—Ç–∏–º–∞–ª—å–Ω—É —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é –ø–æ–≤—ñ—Ç—Ä—è —Ç–∞ –∑–∞—Ö–∏—Å—Ç –¥–≤–∏–≥—É–Ω–∞.',
        price: 850.00,
        stockQuantity: 25,
        imageUrl: getNextProductImage(),
        categoryId: filterCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª', value: '–ü–∞–ø–µ—Ä–æ–≤–∏–π' }, { name: '–§–æ—Ä–º–∞', value: '–ü—Ä—è–º–æ–∫—É—Ç–Ω–∞' }, { name: '–†–æ–∑–º—ñ—Ä', value: '280x215x58 –º–º' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Mann W 712/75',
        description: '–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –Ω—ñ–º–µ—Ü—å–∫–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞. –í—ñ–¥–º—ñ–Ω–Ω–∞ —è–∫—ñ—Å—Ç—å —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Ç–∞ –¥–æ–≤–≥–æ–≤—ñ—á–Ω—ñ—Å—Ç—å.',
        price: 320.00,
        stockQuantity: 50,
        imageUrl: getNextProductImage(),
        categoryId: filterCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Mann Filter')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ù–∞–∫—Ä—É—á—É–≤–∞–ª—å–Ω–∏–π' }, { name: '–î—ñ–∞–º–µ—Ç—Ä', value: '76 –º–º' }, { name: '–í–∏—Å–æ—Ç–∞', value: '79 –º–º' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Bosch F 026 402 067',
        description: '–ù–∞–¥—ñ–π–Ω–∏–π –ø–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø–∞–ª–∏–≤–∞ –≤—ñ–¥ –∑–∞–±—Ä—É–¥–Ω–µ–Ω—å —Ç–∞ –≤–æ–¥–∏.',
        price: 450.00,
        stockQuantity: 30,
        imageUrl: getNextProductImage(),
        categoryId: filterCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–õ—ñ–Ω—ñ–π–Ω–∏–π' }, { name: '–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è', value: 'Push-in' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–°–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è NGK BKR6E-11',
        description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —Å–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è –∑ –Ω—ñ–∫–µ–ª–µ–≤–∏–º –µ–ª–µ–∫—Ç—Ä–æ–¥–æ–º. –ó–∞–±–µ–∑–ø–µ—á—É—î —Å—Ç–∞–±—ñ–ª—å–Ω–µ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è.',
        price: 180.00,
        stockQuantity: 100,
        imageUrl: getNextProductImage(),
        categoryId: sparkPlugsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'NGK')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ó–∞–∑–æ—Ä', value: '1.1 –º–º' }, { name: '–†—ñ–∑—å–±–∞', value: 'M14x1.25' }, { name: '–î–æ–≤–∂–∏–Ω–∞ —Ä—ñ–∑—å–±–∏', value: '19 –º–º' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–°–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è Denso IK20TT',
        description: '–Ü—Ä–∏–¥—ñ—î–≤–∞ —Å–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è –ø—Ä–µ–º—ñ—É–º –∫–ª–∞—Å—É –¥–ª—è –ø—ñ–¥–≤–∏—â–µ–Ω–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ.',
        price: 380.00,
        stockQuantity: 60,
        imageUrl: getNextProductImage(),
        categoryId: sparkPlugsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Denso')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª –µ–ª–µ–∫—Ç—Ä–æ–¥–∞', value: '–Ü—Ä–∏–¥—ñ–π' }, { name: '–ó–∞–∑–æ—Ä', value: '0.8 –º–º' }, { name: '–†—ñ–∑—å–±–∞', value: 'M14x1.25' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ Brembo P 83 140',
        description: '–ü–µ—Ä–µ–¥–Ω—ñ –≥–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ –¥–ª—è —î–≤—Ä–æ–ø–µ–π—Å—å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤. –í—ñ–¥–º—ñ–Ω–Ω–µ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è —Ç–∞ –¥–æ–≤–≥–æ–≤—ñ—á–Ω—ñ—Å—Ç—å.',
        price: 2800.00,
        stockQuantity: 15,
        imageUrl: getNextProductImage(),
        categoryId: brakePadsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Brembo')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ü–µ—Ä–µ–¥–Ω—è –≤—ñ—Å—å' }, { name: '–¢–æ–≤—â–∏–Ω–∞', value: '17.5 –º–º' }, { name: '–®–∏—Ä–∏–Ω–∞', value: '131.4 –º–º' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ TRW GDB1515',
        description: '–ó–∞–¥–Ω—ñ –≥–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ –∑ –Ω–∏–∑—å–∫–∏–º —Ä—ñ–≤–Ω–µ–º –ø–∏–ª—É —Ç–∞ —à—É–º—É.',
        price: 1950.00,
        stockQuantity: 22,
        imageUrl: getNextProductImage(),
        categoryId: brakePadsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'TRW')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ó–∞–¥–Ω—è –≤—ñ—Å—å' }, { name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª', value: '–û—Ä–≥–∞–Ω—ñ—á–Ω—ñ' }, { name: '–î–∞—Ç—á–∏–∫ –∑–Ω–æ—Å—É', value: '–ü—Ä–∏—Å—É—Ç–Ω—ñ–π' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Castrol GTX 5W-30',
        description: '–ù–∞–ø—ñ–≤—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ –¥–ª—è –±–µ–Ω–∑–∏–Ω–æ–≤–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤. –ó–∞–±–µ–∑–ø–µ—á—É—î –Ω–∞–¥—ñ–π–Ω–∏–π –∑–∞—Ö–∏—Å—Ç –¥–≤–∏–≥—É–Ω–∞.',
        price: 1600.00,
        stockQuantity: 40,
        imageUrl: getNextProductImage(),
        categoryId: oilCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Castrol')!.id,
        isVariant: false,
        variants: {
          create: [
            {
              name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Castrol GTX 5W-30 (1L)',
              description: '–ù–∞–ø—ñ–≤—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ –¥–ª—è –±–µ–Ω–∑–∏–Ω–æ–≤–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤ - 1 –ª—ñ—Ç—Ä',
              price: 350.00,
              stockQuantity: 80,
              imageUrl: getNextProductImage(),
              categoryId: oilCategory!.id,
              manufacturerId: manufacturers.find(m => m.name === 'Castrol')!.id,
              isVariant: true,
              productOptions: { create: [{ name: "–û–±'—î–º", value: '1 –ª—ñ—Ç—Ä' }] }
            },
            {
              name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Castrol GTX 5W-30 (5L)',
              description: '–ù–∞–ø—ñ–≤—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ –¥–ª—è –±–µ–Ω–∑–∏–Ω–æ–≤–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤ - 5 –ª—ñ—Ç—Ä—ñ–≤',
              price: 1600.00,
              stockQuantity: 40,
              imageUrl: getNextProductImage(),
              categoryId: oilCategory!.id,
              manufacturerId: manufacturers.find(m => m.name === 'Castrol')!.id,
              isVariant: true,
              productOptions: { create: [{ name: "–û–±'—î–º", value: '5 –ª—ñ—Ç—Ä—ñ–≤' }] }
            }
          ]
        },
        productOptions: { create: [{ name: "–í'—è–∑–∫—ñ—Å—Ç—å", value: '5W-30' }, { name: '–¢–∏–ø', value: '–ù–∞–ø—ñ–≤—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞' }, { name: '–°–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è', value: 'API SN/CF' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Shell Helix Ultra 5W-40',
        description: '–ü–æ–≤–Ω—ñ—Å—Ç—é —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–∞—Ö–∏—Å—Ç—É —Å—É—á–∞—Å–Ω–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤.',
        price: 1800.00,
        stockQuantity: 30,
        imageUrl: getNextProductImage(),
        categoryId: oilCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Shell')!.id,
        isVariant: false,
        productOptions: { create: [{ name: "–í'—è–∑–∫—ñ—Å—Ç—å", value: '5W-40' }, { name: '–¢–∏–ø', value: '–ü–æ–≤–Ω—ñ—Å—Ç—é —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞' }, { name: "–û–±'—î–º", value: '4 –ª—ñ—Ç—Ä–∏' }, { name: '–°–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è', value: 'API SP, ACEA A3/B4' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–∫—É–º—É–ª—è—Ç–æ—Ä Varta Blue Dynamic E11',
        description: '–ù–∞–¥—ñ–π–Ω–∏–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏–π –∞–∫—É–º—É–ª—è—Ç–æ—Ä –∑ –≤–∏—Å–æ–∫–æ—é –ø—É—Å–∫–æ–≤–æ—é –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—é.',
        price: 3200.00,
        stockQuantity: 12,
        imageUrl: getNextProductImage(),
        categoryId: batteryCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Varta')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–Ñ–º–Ω—ñ—Å—Ç—å', value: '74 Ah' }, { name: '–ü—É—Å–∫–æ–≤–∏–π —Å—Ç—Ä—É–º', value: '680 A' }, { name: '–ü–æ–ª—è—Ä–Ω—ñ—Å—Ç—å', value: '–ü—Ä—è–º–∞ (R+)' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–∫—É–º—É–ª—è—Ç–æ—Ä Bosch S4 008',
        description: '–ê–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏–π –∞–∫—É–º—É–ª—è—Ç–æ—Ä Bosch S4 Silver, 70Ah, 630A, R+.',
        price: 2900.00,
        stockQuantity: 18,
        imageUrl: getNextProductImage(),
        categoryId: batteryCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–Ñ–º–Ω—ñ—Å—Ç—å', value: '70 Ah' }, { name: '–ü—É—Å–∫–æ–≤–∏–π —Å—Ç—Ä—É–º', value: '630 A' }, { name: '–ü–æ–ª—è—Ä–Ω—ñ—Å—Ç—å', value: '–ü—Ä—è–º–∞ (R+)' }, { name: '–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—è', value: 'Silver' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä Monroe G7423 OESpectrum',
        description: '–ü–µ—Ä–µ–¥–Ω—ñ–π –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä –≥–∞–∑–æ–≤–∏–π –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ—ó —ó–∑–¥–∏ —Ç–∞ —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ.',
        price: 1850.00,
        stockQuantity: 18,
        imageUrl: getNextProductImage(),
        categoryId: shockAbsorberCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Monroe')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ì–∞–∑–æ–≤–∏–π (–¥–≤–æ—Ç—Ä—É–±–Ω–∏–π)' }, { name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ü–µ—Ä–µ–¥–Ω—è –≤—ñ—Å—å' }, { name: '–°–µ—Ä—ñ—è', value: 'OESpectrum' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä Kayaba Excel-G 334833',
        description: '–ó–∞–¥–Ω—ñ–π –≥–∞–∑–æ–≤–∏–π –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó –∫–µ—Ä–æ–≤–∞–Ω–æ—Å—Ç—ñ.',
        price: 1750.00,
        stockQuantity: 25,
        imageUrl: getNextProductImage(),
        categoryId: shockAbsorberCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Kayaba (KYB)')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ì–∞–∑–æ–≤–∏–π (–¥–≤–æ—Ç—Ä—É–±–Ω–∏–π)' }, { name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ó–∞–¥–Ω—è –≤—ñ—Å—å' }, { name: '–°–µ—Ä—ñ—è', value: 'Excel-G' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–†–µ–º—ñ–Ω—å –ì–†–ú Gates K015501XS',
        description: '–ö–æ–º–ø–ª–µ–∫—Ç —Ä–µ–º–µ–Ω—è –ì–†–ú –∑ —Ä–æ–ª–∏–∫–∞–º–∏ –¥–ª—è –Ω–∞–¥—ñ–π–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –¥–≤–∏–≥—É–Ω–∞.',
        price: 2200.00,
        stockQuantity: 15,
        imageUrl: getNextProductImage(),
        categoryId: beltsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Gates')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ö–æ–º–ø–ª–µ–∫—Ç (—Ä–µ–º—ñ–Ω—å + —Ä–æ–ª–∏–∫–∏)' }, { name: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑—É–±—ñ–≤', value: '137' }, { name: '–®–∏—Ä–∏–Ω–∞', value: '25 –º–º' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–õ–∞–º–ø–∞ H7 Philips Vision +30%',
        description: '–ì–∞–ª–æ–≥–µ–Ω–Ω–∞ –ª–∞–º–ø–∞ H7, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—î –Ω–∞ 30% –±—ñ–ª—å—à–µ —Å–≤—ñ—Ç–ª–∞.',
        price: 250.00,
        stockQuantity: 50,
        imageUrl: getNextProductImage(),
        categoryId: lampsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Hella')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¶–æ–∫–æ–ª—å', value: 'H7' }, { name: '–¢–∏–ø', value: '–ì–∞–ª–æ–≥–µ–Ω–Ω–∞' }, { name: '–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å', value: '55W' }, { name: '–ù–∞–ø—Ä—É–≥–∞', value: '12V' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–õ–∞–º–ø–∞ LED H4 Osram Night Breaker',
        description: '–°–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥–Ω–∞ –ª–∞–º–ø–∞ H4 –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Å–≤—ñ—Ç–ª–∞, —è—Å–∫—Ä–∞–≤–µ –±—ñ–ª–µ —Å–≤—ñ—Ç–ª–æ.',
        price: 1200.00,
        stockQuantity: 30,
        imageUrl: getNextProductImage(),
        categoryId: lampsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false, productOptions: { create: [{ name: '–¶–æ–∫–æ–ª—å', value: 'H4' }, { name: '–¢–∏–ø', value: 'LED' }, { name: '–ö–æ–ª—ñ—Ä–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', value: '6000K' }, { name: '–ù–∞–ø—Ä—É–≥–∞', value: '12V/24V' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ì–∞–ª—å–º—ñ–≤–Ω–∏–π –¥–∏—Å–∫ Brembo 09.5844.11',
        description: '–ü–µ—Ä–µ–¥–Ω—ñ–π –≥–∞–ª—å–º—ñ–≤–Ω–∏–π –¥–∏—Å–∫ –¥–ª—è —î–≤—Ä–æ–ø–µ–π—Å—å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤. –í–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–π —á–∞–≤—É–Ω.',
        price: 1850.00,
        stockQuantity: 20,
        imageUrl: getNextProductImage(),
        categoryId: brakeDiscsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Brembo')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–î—ñ–∞–º–µ—Ç—Ä', value: '280 –º–º' }, { name: '–¢–æ–≤—â–∏–Ω–∞', value: '22 –º–º' }, { name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ü–µ—Ä–µ–¥–Ω—è –≤—ñ—Å—å' }, { name: '–¢–∏–ø', value: '–í–µ–Ω—Ç–∏–ª—å–æ–≤–∞–Ω–∏–π' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ì–∞–ª—å–º—ñ–≤–Ω–∏–π –¥–∏—Å–∫ TRW DF4823',
        description: '–ó–∞–¥–Ω—ñ–π –≥–∞–ª—å–º—ñ–≤–Ω–∏–π –¥–∏—Å–∫, —Å—É—Ü—ñ–ª—å–Ω–∏–π, –¥–ª—è –ª–µ–≥–∫–æ–≤–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤.',
        price: 980.00,
        stockQuantity: 35,
        imageUrl: getNextProductImage(),
        categoryId: brakeDiscsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'TRW')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–î—ñ–∞–º–µ—Ç—Ä', value: '240 –º–º' }, { name: '–¢–æ–≤—â–∏–Ω–∞', value: '9 –º–º' }, { name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ó–∞–¥–Ω—è –≤—ñ—Å—å' }, { name: '–¢–∏–ø', value: '–°—É—Ü—ñ–ª—å–Ω–∏–π' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–í–æ–¥—è–Ω–∞ –ø–æ–º–ø–∞ Gates WP0031',
        description: '–ù–∞–¥—ñ–π–Ω–∞ –≤–æ–¥—è–Ω–∞ –ø–æ–º–ø–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –æ—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è –¥–≤–∏–≥—É–Ω–∞.',
        price: 2200.00,
        stockQuantity: 18,
        imageUrl: getNextProductImage(),
        categoryId: waterPumpsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Gates')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª –∫–æ—Ä–ø—É—Å—É', value: '–ê–ª—é–º—ñ–Ω—ñ–π' }, { name: '–¢–∏–ø –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è', value: '–§–ª–∞–Ω—Ü–µ–≤–∏–π' }, { name: '–ü—Ä–∏–≤—ñ–¥', value: '–†–µ–º—ñ–Ω—å –ì–†–ú' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–í–æ–¥—è–Ω–∞ –ø–æ–º–ø–∞ Bosch 1987946504',
        description: '–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∞ –≤–æ–¥—è–Ω–∞ –ø–æ–º–ø–∞ Bosch –∑ –ø—ñ–¥—à–∏–ø–Ω–∏–∫–æ–º –≤–∏—Å–æ–∫–æ—ó —è–∫–æ—Å—Ç—ñ.',
        price: 1950.00,
        stockQuantity: 25,
        imageUrl: getNextProductImage(),
        categoryId: waterPumpsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª', value: '–ß–∞–≤—É–Ω –∑ –∞–ª—é–º—ñ–Ω—ñ—î–≤–∏–º –∫–æ—Ä–ø—É—Å–æ–º' }, { name: '–ì–∞—Ä–∞–Ω—Ç—ñ—è', value: '24 –º—ñ—Å—è—Ü—ñ' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ü—Ä–æ–∫–ª–∞–¥–∫–∞ –≥–æ–ª–æ–≤–∫–∏ –±–ª–æ–∫—É Febi 26677',
        description: '–ú–µ—Ç–∞–ª–µ–≤–∞ –ø—Ä–æ–∫–ª–∞–¥–∫–∞ –≥–æ–ª–æ–≤–∫–∏ –±–ª–æ–∫—É —Ü–∏–ª—ñ–Ω–¥—Ä—ñ–≤ –∑ –ø–æ–∫—Ä–∏—Ç—Ç—è–º.',
        price: 1200.00,
        stockQuantity: 15,
        imageUrl: getNextProductImage(),
        categoryId: gasketCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Febi Bilstein')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª', value: '–°—Ç–∞–ª—å –∑ –≥—Ä–∞—Ñ—ñ—Ç–æ–≤–∏–º –ø–æ–∫—Ä–∏—Ç—Ç—è–º' }, { name: '–¢–æ–≤—â–∏–Ω–∞', value: '1.2 –º–º' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ö–æ–º–ø–ª–µ–∫—Ç –ø—Ä–æ–∫–ª–∞–¥–æ–∫ –¥–≤–∏–≥—É–Ω–∞ Victor Reinz 01-36290-01',
        description: '–ü–æ–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Ç –ø—Ä–æ–∫–ª–∞–¥–æ–∫ –¥–ª—è –∫–∞–ø—ñ—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–µ–º–æ–Ω—Ç—É –¥–≤–∏–≥—É–Ω–∞.',
        price: 3500.00,
        stockQuantity: 8,
        imageUrl: getNextProductImage(),
        categoryId: gasketCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Febi Bilstein')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ö–æ–º–ø–ª–µ–∫—Ç–Ω—ñ—Å—Ç—å', value: '–ü–æ–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Ç' }, { name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª', value: '–†—ñ–∑–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–¢–µ—Ä–º–æ—Å—Ç–∞—Ç Gates TH33882G1',
        description: '–¢–µ—Ä–º–æ—Å—Ç–∞—Ç —Å–∏—Å—Ç–µ–º–∏ –æ—Ö–æ–ª–æ–¥–∂–µ–Ω–Ω—è –∑ –∫–æ—Ä–ø—É—Å–æ–º —Ç–∞ —É—â—ñ–ª—å–Ω–µ–Ω–Ω—è–º.',
        price: 850.00,
        stockQuantity: 40,
        imageUrl: getNextProductImage(),
        categoryId: thermostatCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Gates')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è', value: '87¬∞C' }, { name: '–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü—ñ—è', value: '–ó –∫–æ—Ä–ø—É—Å–æ–º' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–¢–µ—Ä–º–æ—Å—Ç–∞—Ç Wahler 4247.87D',
        description: '–ù—ñ–º–µ—Ü—å–∫–∏–π —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç –ø—Ä–µ–º—ñ—É–º –∫–ª–∞—Å—É –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏.',
        price: 650.00,
        stockQuantity: 30,
        imageUrl: getNextProductImage(),
        categoryId: thermostatCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Febi Bilstein')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è', value: '83¬∞C' }, { name: '–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü—ñ—è', value: '–ë–µ–∑ –∫–æ—Ä–ø—É—Å—É' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Bosch 0124525037',
        description: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–º—ñ–Ω–Ω–æ–≥–æ —Å—Ç—Ä—É–º—É –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—é 140–ê –¥–ª—è —Å—É—á–∞—Å–Ω–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤.',
        price: 8500.00,
        stockQuantity: 5,
        imageUrl: getNextProductImage(),
        categoryId: generatorCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å', value: '140A' }, { name: '–ù–∞–ø—Ä—É–≥–∞', value: '14V' }, { name: '–¢–∏–ø –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è', value: 'PAD' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–©—ñ—Ç–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ Bosch 1007014106',
        description: '–ö–æ–º–ø–ª–µ–∫—Ç –≤—É–≥—ñ–ª—å–Ω–∏—Ö —â—ñ—Ç–æ–∫ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ñ–≤ Bosch.',
        price: 350.00,
        stockQuantity: 60,
        imageUrl: getNextProductImage(),
        categoryId: generatorCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ö–æ–º–ø–ª–µ–∫—Ç–Ω—ñ—Å—Ç—å', value: '2 —â—ñ—Ç–∫–∏ + –ø—Ä—É–∂–∏–Ω–∏' }, { name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª', value: '–í—É–≥—ñ–ª–ª—è-–≥—Ä–∞—Ñ—ñ—Ç' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ö–æ–º–ø–ª–µ–∫—Ç –∑—á–µ–ø–ª–µ–Ω–Ω—è Sachs 3000 951 301',
        description: '–ü–æ–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Ç –∑—á–µ–ø–ª–µ–Ω–Ω—è: –¥–∏—Å–∫, –∫–æ—à–∏–∫, –ø—ñ–¥—à–∏–ø–Ω–∏–∫ –≤–∏–∂–∏–º–Ω–∏–π.',
        price: 4200.00,
        stockQuantity: 12,
        imageUrl: getNextProductImage(),
        categoryId: clutchCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Sachs')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–î—ñ–∞–º–µ—Ç—Ä –¥–∏—Å–∫–∞', value: '215 –º–º' }, { name: '–ö–æ–º–ø–ª–µ–∫—Ç–Ω—ñ—Å—Ç—å', value: '–î–∏—Å–∫ + –∫–æ—à–∏–∫ + –ø—ñ–¥—à–∏–ø–Ω–∏–∫' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ö–æ–º–ø–ª–µ–∫—Ç –∑—á–µ–ø–ª–µ–Ω–Ω—è LuK 621 3037 00',
        description: '–ù—ñ–º–µ—Ü—å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Ç –∑—á–µ–ø–ª–µ–Ω–Ω—è LuK –¥–ª—è —î–≤—Ä–æ–ø–µ–π—Å—å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤.',
        price: 3850.00,
        stockQuantity: 10,
        imageUrl: getNextProductImage(),
        categoryId: clutchCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Continental')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–î—ñ–∞–º–µ—Ç—Ä –¥–∏—Å–∫–∞', value: '200 –º–º' }, { name: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å —à–ª—ñ—Ü—ñ–≤', value: '20' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–°–∞–ª–æ–Ω–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Mann CU 2545',
        description: '–í—É–≥—ñ–ª—å–Ω–∏–π —Å–∞–ª–æ–Ω–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø–æ–≤—ñ—Ç—Ä—è –≤ —Å–∞–ª–æ–Ω—ñ.',
        price: 520.00,
        stockQuantity: 45,
        imageUrl: getNextProductImage(),
        categoryId: filterCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Mann Filter')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ê–∫—Ç–∏–≤–æ–≤–∞–Ω–∏–π –≤—É–≥—ñ–ª–ª—è' }, { name: '–†–æ–∑–º—ñ—Ä', value: '216x194x30 –º–º' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–°–∞–ª–æ–Ω–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Bosch 1987432120',
        description: '–ê–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä—ñ–∞–ª—å–Ω–∏–π —Å–∞–ª–æ–Ω–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –∑ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∏–º –≤—É–≥—ñ–ª–ª—è–º.',
        price: 650.00,
        stockQuantity: 35,
        imageUrl: getNextProductImage(),
        categoryId: filterCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ê–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä—ñ–∞–ª—å–Ω–∏–π' }, { name: '–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è', value: '99% –ø–∏–ª–∫—É —Ç–∞ –±–∞–∫—Ç–µ—Ä—ñ–π' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–°–≤—ñ—á–∫–∞ —Ä–æ–∑–∂–∞—Ä—é–≤–∞–Ω–Ω—è Bosch 0250403009',
        description: '–°–≤—ñ—á–∫–∞ —Ä–æ–∑–∂–∞—Ä—é–≤–∞–Ω–Ω—è –¥–ª—è –¥–∏–∑–µ–ª—å–Ω–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤ –∑ –∫–µ—Ä–∞–º—ñ—á–Ω–∏–º –Ω–∞–≥—Ä—ñ–≤–∞–ª—å–Ω–∏–º –µ–ª–µ–º–µ–Ω—Ç–æ–º.',
        price: 850.00,
        stockQuantity: 24,
        imageUrl: getNextProductImage(),
        categoryId: sparkPlugsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ö–µ—Ä–∞–º—ñ—á–Ω–∞' }, { name: '–ß–∞—Å –Ω–∞–≥—Ä—ñ–≤—É', value: '2 —Å–µ–∫—É–Ω–¥–∏' }, { name: '–†—ñ–∑—å–±–∞', value: 'M10x1.0' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–°–≤—ñ—á–∫–∞ —Ä–æ–∑–∂–∞—Ä—é–≤–∞–Ω–Ω—è NGK Y-534J',
        description: '–ú–µ—Ç–∞–ª–µ–≤–∞ —Å–≤—ñ—á–∫–∞ —Ä–æ–∑–∂–∞—Ä—é–≤–∞–Ω–Ω—è –¥–ª—è –≤–∞–∂–∫–∏—Ö —É–º–æ–≤ –µ–∫—Å–ø–ª—É–∞—Ç–∞—Ü—ñ—ó.',
        price: 680.00,
        stockQuantity: 30,
        imageUrl: getNextProductImage(),
        categoryId: sparkPlugsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'NGK')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ú–µ—Ç–∞–ª–µ–≤–∞' }, { name: '–ß–∞—Å –Ω–∞–≥—Ä—ñ–≤—É', value: '4 —Å–µ–∫—É–Ω–¥–∏' }, { name: '–†—ñ–∑—å–±–∞', value: 'M10x1.25' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–õ–∞–º–ø–∞ H1 Osram Night Breaker Laser +150%',
        description: '–ü–æ—Ç—É–∂–Ω–∞ –≥–∞–ª–æ–≥–µ–Ω–Ω–∞ –ª–∞–º–ø–∞ H1 –∑ –ø—ñ–¥–≤–∏—â–µ–Ω–æ—é —è—Å–∫—Ä–∞–≤—ñ—Å—Ç—é –¥–æ 150%.',
        price: 420.00,
        stockQuantity: 40,
        imageUrl: getNextProductImage(),
        categoryId: lampsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Hella')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¶–æ–∫–æ–ª—å', value: 'H1' }, { name: '–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å', value: '55W' }, { name: '–Ø—Å–∫—Ä–∞–≤—ñ—Å—Ç—å', value: '+150%' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–õ–∞–º–ø–∞ W5W Philips X-tremeVision',
        description: '–°–∏–≥–Ω–∞–ª—å–Ω–∞ –ª–∞–º–ø–∞ W5W –¥–ª—è –≥–∞–±–∞—Ä–∏—Ç–Ω–∏—Ö –≤–æ–≥–Ω—ñ–≤ —Ç–∞ –ø–æ–∫–∞–∂—á–∏–∫—ñ–≤ –ø–æ–≤–æ—Ä–æ—Ç—É.',
        price: 85.00,
        stockQuantity: 100,
        imageUrl: getNextProductImage(),
        categoryId: lampsCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Hella')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¶–æ–∫–æ–ª—å', value: 'W5W' }, { name: '–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å', value: '5W' }, { name: '–¢–∏–ø', value: '–ì–∞–ª–æ–≥–µ–Ω–Ω–∞' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Total Quartz 9000 5W-30',
        description: '–ü–æ–≤–Ω—ñ—Å—Ç—é —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ –¥–ª—è –±–µ–Ω–∑–∏–Ω–æ–≤–∏—Ö —Ç–∞ –¥–∏–∑–µ–ª—å–Ω–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤.',
        price: 1950.00,
        stockQuantity: 25,
        imageUrl: getNextProductImage(),
        categoryId: oilCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Shell')!.id,
        isVariant: false,
        productOptions: { create: [{ name: "–í'—è–∑–∫—ñ—Å—Ç—å", value: '5W-30' }, { name: '–¢–∏–ø', value: '–ü–æ–≤–Ω—ñ—Å—Ç—é —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞' }, { name: "–û–±'—î–º", value: '5 –ª—ñ—Ç—Ä—ñ–≤' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Liqui Moly Top Tec 4100 5W-40',
        description: '–ù—ñ–º–µ—Ü—å–∫–∞ —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –æ–ª–∏–≤–∞ –ø—Ä–µ–º—ñ—É–º –∫–ª–∞—Å—É –¥–ª—è –≤–∏—Å–æ–∫–æ–Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤.',
        price: 2200.00,
        stockQuantity: 20,
        imageUrl: getNextProductImage(),
        categoryId: oilCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Mobil 1')!.id,
        isVariant: false,
        productOptions: { create: [{ name: "–í'—è–∑–∫—ñ—Å—Ç—å", value: '5W-40' }, { name: '–¢–∏–ø', value: '–ü–æ–≤–Ω—ñ—Å—Ç—é —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞' }, { name: "–û–±'—î–º", value: '5 –ª—ñ—Ç—Ä—ñ–≤' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ì–∞–ª—å–º—ñ–≤–Ω–∞ —Ä—ñ–¥–∏–Ω–∞ Bosch DOT 4',
        description: '–°–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –≥–∞–ª—å–º—ñ–≤–Ω–∞ —Ä—ñ–¥–∏–Ω–∞ –∑ –≤–∏—Å–æ–∫–æ—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ—é –∫–∏–ø—ñ–Ω–Ω—è.',
        price: 320.00,
        stockQuantity: 50,
        imageUrl: getNextProductImage(),
        categoryId: oilCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Bosch')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–°–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è', value: 'DOT 4' }, { name: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫–∏–ø—ñ–Ω–Ω—è', value: '230¬∞C' }, { name: "–û–±'—î–º", value: '1 –ª—ñ—Ç—Ä' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–Ω—Ç–∏—Ñ—Ä–∏–∑ Castrol Radicool SF',
        description: '–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ç –∞–Ω—Ç–∏—Ñ—Ä–∏–∑—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –µ—Ç–∏–ª–µ–Ω–≥–ª—ñ–∫–æ–ª—é –¥–ª—è –≤—Å—ñ—Ö —Ç–∏–ø—ñ–≤ –¥–≤–∏–≥—É–Ω—ñ–≤.',
        price: 480.00,
        stockQuantity: 35,
        imageUrl: getNextProductImage(),
        categoryId: oilCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Castrol')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ç G12++' }, { name: '–ö–æ–ª—ñ—Ä', value: '–§—ñ–æ–ª–µ—Ç–æ–≤–∏–π' }, { name: "–û–±'—î–º", value: '5 –ª—ñ—Ç—Ä—ñ–≤' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–∫—É–º—É–ª—è—Ç–æ—Ä Tudor Exide AGM',
        description: 'AGM –∞–∫—É–º—É–ª—è—Ç–æ—Ä –¥–ª—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –∑ —Å–∏—Å—Ç–µ–º–æ—é Start-Stop.',
        price: 4500.00,
        stockQuantity: 8,
        imageUrl: getNextProductImage(),
        categoryId: batteryCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Varta')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–Ñ–º–Ω—ñ—Å—Ç—å', value: '80 Ah' }, { name: '–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—è', value: 'AGM' }, { name: 'Start-Stop', value: '–¢–∞–∫' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä Bilstein B4 22-112684',
        description: '–ì–∞–∑–æ–≤–∏–π –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä –Ω—ñ–º–µ—Ü—å–∫–æ—ó —è–∫–æ—Å—Ç—ñ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ—ó —ó–∑–¥–∏.',
        price: 2200.00,
        stockQuantity: 15,
        imageUrl: getNextProductImage(),
        categoryId: shockAbsorberCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Monroe')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–¢–∏–ø', value: '–ì–∞–∑–æ–≤–∏–π –æ–¥–Ω–æ—Ç—Ä—É–±–Ω–∏–π' }, { name: '–°–µ—Ä—ñ—è', value: 'B4 OE Replacement' }] }
      }
    }),
    prisma.product.create({
      data: {
        name: '–°—Ç—ñ–π–∫–∞ —Å—Ç–∞–±—ñ–ª—ñ–∑–∞—Ç–æ—Ä–∞ Lemf√∂rder 37346 01',
        description: '–°—Ç—ñ–π–∫–∞ —Å—Ç–∞–±—ñ–ª—ñ–∑–∞—Ç–æ—Ä–∞ –ø–æ–ø–µ—Ä–µ—á–Ω–æ—ó —Å—Ç—ñ–π–∫–æ—Å—Ç—ñ –∑ –ø–æ–ª—ñ—É—Ä–µ—Ç–∞–Ω–æ–≤–∏–º–∏ –≤—Ç—É–ª–∫–∞–º–∏.',
        price: 380.00,
        stockQuantity: 60,
        imageUrl: getNextProductImage(),
        categoryId: shockAbsorberCategory!.id,
        manufacturerId: manufacturers.find(m => m.name === 'Lemf√∂rder')!.id,
        isVariant: false,
        productOptions: { create: [{ name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ü–µ—Ä–µ–¥–Ω—è –≤—ñ—Å—å' }, { name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª –≤—Ç—É–ª–æ–∫', value: '–ü–æ–ª—ñ—É—Ä–µ—Ç–∞–Ω' }] }
      }
    })
  ])

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ —Ç–æ–≤–∞—Ä—ñ–≤ –∑ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è–º–∏...')

  const allCarYears = await prisma.carYear.findMany({
    include: {
      model: { include: { make: true } },
      bodyTypes: { include: { engines: true } }
    }
  })

  const compatibilities = []

  const productAirFilterBosch = products.find(p => p.name === '–ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Bosch S0123')
  const carToyotaCamry2018_20L = allCarYears.find(cy =>
    cy.model.make.name === 'Toyota' &&
    cy.model.name === 'Camry' &&
    cy.year === 2018 &&
    cy.bodyTypes.some(bt => bt.name === '–°–µ–¥–∞–Ω' && bt.engines.some(e => e.name === '2.0L I4'))
  )
  if (productAirFilterBosch && carToyotaCamry2018_20L) {
    const bodyType = carToyotaCamry2018_20L.bodyTypes.find(bt => bt.name === '–°–µ–¥–∞–Ω')!
    const engine = bodyType.engines.find(e => e.name === '2.0L I4')!
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productAirFilterBosch.id,
          carMakeId: carToyotaCamry2018_20L.model.make.id,
          carModelId: carToyotaCamry2018_20L.model.id,
          carYearId: carToyotaCamry2018_20L.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  const productBrakesBrembo = products.find(p => p.name === '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ Brembo P 83 140')
  const carBmwX5_2019_30Turbo = allCarYears.find(cy =>
    cy.model.make.name === 'BMW' &&
    cy.model.name === 'X5' &&
    cy.year === 2019 &&
    cy.bodyTypes.some(bt => bt.name === 'SUV' && bt.engines.some(e => e.name === '3.0L I6 Turbo'))
  )
  if (productBrakesBrembo && carBmwX5_2019_30Turbo) {
    const bodyType = carBmwX5_2019_30Turbo.bodyTypes.find(bt => bt.name === 'SUV')!
    const engine = bodyType.engines.find(e => e.name === '3.0L I6 Turbo')!
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productBrakesBrembo.id,
          carMakeId: carBmwX5_2019_30Turbo.model.make.id,
          carModelId: carBmwX5_2019_30Turbo.model.id,
          carYearId: carBmwX5_2019_30Turbo.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  const productOilShell = products.find(p => p.name === '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Shell Helix Ultra 5W-40')
  const carVWGolf2018_14TSI = allCarYears.find(cy =>
    cy.model.make.name === 'Volkswagen' &&
    cy.model.name === 'Golf' &&
    cy.year === 2018 &&
    cy.bodyTypes.some(bt => bt.name === '–•–µ—Ç—á–±–µ–∫' && bt.engines.some(e => e.name === '1.4L TSI'))
  )
  if (productOilShell && carVWGolf2018_14TSI) {
    const bodyType = carVWGolf2018_14TSI.bodyTypes.find(bt => bt.name === '–•–µ—Ç—á–±–µ–∫')!
    const engine = bodyType.engines.find(e => e.name === '1.4L TSI')!
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productOilShell.id,
          carMakeId: carVWGolf2018_14TSI.model.make.id,
          carModelId: carVWGolf2018_14TSI.model.id,
          carYearId: carVWGolf2018_14TSI.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  const productSparkPlugNGK = products.find(p => p.name === '–°–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è NGK BKR6E-11');
  const carFordFocus2018_10EcoBoost = allCarYears.find(cy =>
    cy.model.make.name === 'Ford' &&
    cy.model.name === 'Focus' &&
    cy.year === 2018 &&
    cy.bodyTypes.some(bt => bt.name === '–•–µ—Ç—á–±–µ–∫' && bt.engines.some(e => e.name === '1.0L EcoBoost'))
  );
  if (productSparkPlugNGK && carFordFocus2018_10EcoBoost) {
    const bodyType = carFordFocus2018_10EcoBoost.bodyTypes.find(bt => bt.name === '–•–µ—Ç—á–±–µ–∫')!;
    const engine = bodyType.engines.find(e => e.name === '1.0L EcoBoost')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productSparkPlugNGK.id,
          carMakeId: carFordFocus2018_10EcoBoost.model.make.id,
          carModelId: carFordFocus2018_10EcoBoost.model.id,
          carYearId: carFordFocus2018_10EcoBoost.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      })
    );
  }

  const productBatteryVarta = products.find(p => p.name === '–ê–∫—É–º—É–ª—è—Ç–æ—Ä Varta Blue Dynamic E11');
  const carSkodaOctavia2020_20TDI = allCarYears.find(cy =>
    cy.model.make.name === 'Skoda' &&
    cy.model.name === 'Octavia' &&
    cy.year === 2020 &&
    cy.bodyTypes.some(bt => bt.name === '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª (Combi)' && bt.engines.some(e => e.name === '2.0L TDI Evo'))
  );
  if (productBatteryVarta && carSkodaOctavia2020_20TDI) {
    const bodyType = carSkodaOctavia2020_20TDI.bodyTypes.find(bt => bt.name === '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª (Combi)')!;
    const engine = bodyType.engines.find(e => e.name === '2.0L TDI Evo')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productBatteryVarta.id,
          carMakeId: carSkodaOctavia2020_20TDI.model.make.id,
          carModelId: carSkodaOctavia2020_20TDI.model.id,
          carYearId: carSkodaOctavia2020_20TDI.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      }));
  }

  const productBrakeDiscBrembo = products.find(p => p.name === '–ì–∞–ª—å–º—ñ–≤–Ω–∏–π –¥–∏—Å–∫ Brembo 09.5844.11');
  const carBmw3Series2019 = allCarYears.find(cy =>
    cy.model.make.name === 'BMW' &&
    cy.model.name === '3 Series' &&
    cy.year === 2019 &&
    cy.bodyTypes.some(bt => bt.name === '–°–µ–¥–∞–Ω' && bt.engines.some(e => e.name === '2.0L I4 Turbo'))
  );
  if (productBrakeDiscBrembo && carBmw3Series2019) {
    const bodyType = carBmw3Series2019.bodyTypes.find(bt => bt.name === '–°–µ–¥–∞–Ω')!;
    const engine = bodyType.engines.find(e => e.name === '2.0L I4 Turbo')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productBrakeDiscBrembo.id,
          carMakeId: carBmw3Series2019.model.make.id,
          carModelId: carBmw3Series2019.model.id,
          carYearId: carBmw3Series2019.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      })
    );
  }

  const productWaterPumpGates = products.find(p => p.name === '–í–æ–¥—è–Ω–∞ –ø–æ–º–ø–∞ Gates WP0031');
  const carHondaCivic2018 = allCarYears.find(cy =>
    cy.model.make.name === 'Honda' &&
    cy.model.name === 'Civic' &&
    cy.year === 2018 &&
    cy.bodyTypes.some(bt => bt.name === '–°–µ–¥–∞–Ω' && bt.engines.some(e => e.name === '1.5L VTEC Turbo'))
  );
  if (productWaterPumpGates && carHondaCivic2018) {
    const bodyType = carHondaCivic2018.bodyTypes.find(bt => bt.name === '–°–µ–¥–∞–Ω')!;
    const engine = bodyType.engines.find(e => e.name === '1.5L VTEC Turbo')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productWaterPumpGates.id,
          carMakeId: carHondaCivic2018.model.make.id,
          carModelId: carHondaCivic2018.model.id,
          carYearId: carHondaCivic2018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      })
    );
  }

  const productThermostatGates = products.find(p => p.name === '–¢–µ—Ä–º–æ—Å—Ç–∞—Ç Gates TH33882G1');
  const carHyundaiTucson2019 = allCarYears.find(cy =>
    cy.model.make.name === 'Hyundai' &&
    cy.model.name === 'Tucson' &&
    cy.year === 2019 &&
    cy.bodyTypes.some(bt => bt.name === 'SUV' && bt.engines.some(e => e.name === '1.6L T-GDI'))
  );
  if (productThermostatGates && carHyundaiTucson2019) {
    const bodyType = carHyundaiTucson2019.bodyTypes.find(bt => bt.name === 'SUV')!;
    const engine = bodyType.engines.find(e => e.name === '1.6L T-GDI')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productThermostatGates.id,
          carMakeId: carHyundaiTucson2019.model.make.id,
          carModelId: carHyundaiTucson2019.model.id,
          carYearId: carHyundaiTucson2019.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      })
    );
  }

  const productClutchSachs = products.find(p => p.name === '–ö–æ–º–ø–ª–µ–∫—Ç –∑—á–µ–ø–ª–µ–Ω–Ω—è Sachs 3000 951 301');
  const carKiaCeed2018 = allCarYears.find(cy =>
    cy.model.make.name === 'Kia' &&
    cy.model.name === 'Ceed' &&
    cy.year === 2018 &&
    cy.bodyTypes.some(bt => bt.name === '–•–µ—Ç—á–±–µ–∫' && bt.engines.some(e => e.name === '1.0L T-GDI'))
  );
  if (productClutchSachs && carKiaCeed2018) {
    const bodyType = carKiaCeed2018.bodyTypes.find(bt => bt.name === '–•–µ—Ç—á–±–µ–∫')!;
    const engine = bodyType.engines.find(e => e.name === '1.0L T-GDI')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productClutchSachs.id,
          carMakeId: carKiaCeed2018.model.make.id,
          carModelId: carKiaCeed2018.model.id,
          carYearId: carKiaCeed2018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      })
    );
  }

  const productGeneratorBosch = products.find(p => p.name === '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Bosch 0124525037');
  const carNissanQashqai2018 = allCarYears.find(cy =>
    cy.model.make.name === 'Nissan' &&
    cy.model.name === 'Qashqai' &&
    cy.year === 2018 &&
    cy.bodyTypes.some(bt => bt.name === 'SUV' && bt.engines.some(e => e.name === '1.2L DIG-T'))
  );
  if (productGeneratorBosch && carNissanQashqai2018) {
    const bodyType = carNissanQashqai2018.bodyTypes.find(bt => bt.name === 'SUV')!;
    const engine = bodyType.engines.find(e => e.name === '1.2L DIG-T')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productGeneratorBosch.id,
          carMakeId: carNissanQashqai2018.model.make.id,
          carModelId: carNissanQashqai2018.model.id,
          carYearId: carNissanQashqai2018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      })
    );
  }

  const productGlowPlugBosch = products.find(p => p.name === '–°–≤—ñ—á–∫–∞ —Ä–æ–∑–∂–∞—Ä—é–≤–∞–Ω–Ω—è Bosch 0250403009');
  const carPeugeot3082018 = allCarYears.find(cy =>
    cy.model.make.name === 'Peugeot' &&
    cy.model.name === '308' &&
    cy.year === 2018 &&
    cy.bodyTypes.some(bt => bt.name === '–•–µ—Ç—á–±–µ–∫' && bt.engines.some(e => e.name === '1.5L BlueHDi'))
  );
  if (productGlowPlugBosch && carPeugeot3082018) {
    const bodyType = carPeugeot3082018.bodyTypes.find(bt => bt.name === '–•–µ—Ç—á–±–µ–∫')!;
    const engine = bodyType.engines.find(e => e.name === '1.5L BlueHDi')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productGlowPlugBosch.id,
          carMakeId: carPeugeot3082018.model.make.id,
          carModelId: carPeugeot3082018.model.id,
          carYearId: carPeugeot3082018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      })
    );
  }

  const productCabinFilterMann = products.find(p => p.name === '–°–∞–ª–æ–Ω–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Mann CU 2545');
  const carRenaultClio2018 = allCarYears.find(cy =>
    cy.model.make.name === 'Renault' &&
    cy.model.name === 'Clio' &&
    cy.year === 2018 &&
    cy.bodyTypes.some(bt => bt.name === '–•–µ—Ç—á–±–µ–∫' && bt.engines.some(e => e.name === '0.9L TCe'))
  );
  if (productCabinFilterMann && carRenaultClio2018) {
    const bodyType = carRenaultClio2018.bodyTypes.find(bt => bt.name === '–•–µ—Ç—á–±–µ–∫')!;
    const engine = bodyType.engines.find(e => e.name === '0.9L TCe')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productCabinFilterMann.id,
          carMakeId: carRenaultClio2018.model.make.id,
          carModelId: carRenaultClio2018.model.id,
          carYearId: carRenaultClio2018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      })
    );
  }

  const productOilTotal = products.find(p => p.name === '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Total Quartz 9000 5W-30');
  const carOpelAstra2018 = allCarYears.find(cy =>
    cy.model.make.name === 'Opel' &&
    cy.model.name === 'Astra' &&
    cy.year === 2018 &&
    cy.bodyTypes.some(bt => bt.name === '–•–µ—Ç—á–±–µ–∫' && bt.engines.some(e => e.name === '1.0L Turbo'))
  );
  if (productOilTotal && carOpelAstra2018) {
    const bodyType = carOpelAstra2018.bodyTypes.find(bt => bt.name === '–•–µ—Ç—á–±–µ–∫')!;
    const engine = bodyType.engines.find(e => e.name === '1.0L Turbo')!;
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: productOilTotal.id,
          carMakeId: carOpelAstra2018.model.make.id,
          carModelId: carOpelAstra2018.model.id,
          carYearId: carOpelAstra2018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id,
        },
      })
    );
  }

  await Promise.all(compatibilities)

  const totalProducts = await prisma.product.count({ where: { isVariant: false } });
  const totalVariants = await prisma.product.count({ where: { isVariant: true } });
  const totalCategories = await prisma.category.count({ where: { parentId: null } });
  const totalSubCategories = await prisma.category.count({ where: { parentId: { not: null } } });
  const totalManufacturers = await prisma.manufacturer.count();
  const totalCarMakes = await prisma.carMake.count();
  const totalCarModels = await prisma.carModel.count();
  const totalCompatibilities = await prisma.compatibility.count();


  console.log('‚úÖ Seeding –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!')
  console.log(`üìä –°—Ç–≤–æ—Ä–µ–Ω–æ:
  - ${totalCategories} –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–∞ ${totalSubCategories} –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ–π
  - ${totalManufacturers} –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤
  - ${totalCarMakes} –º–∞—Ä–æ–∫ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤
  - ${totalCarModels} –º–æ–¥–µ–ª–µ–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤
  - ${totalProducts} –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ —Ç–∞ ${totalVariants} –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ —Ç–æ–≤–∞—Ä—ñ–≤
  - ${totalCompatibilities} –∑–≤'—è–∑–∫—ñ–≤ —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ`)
}

main()
  .then(async () => {
    await prisma.$disconnect()
  })
  .catch(async (e) => {
    console.error(e)
    await prisma.$disconnect()
    process.exit(1)
  })