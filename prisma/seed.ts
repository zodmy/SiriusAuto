import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± –û—á–∏—â–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...')

  await prisma.compatibility.deleteMany()
  await prisma.carEngine.deleteMany()
  await prisma.carBodyType.deleteMany()
  await prisma.carYear.deleteMany()
  await prisma.carModel.deleteMany()
  await prisma.carMake.deleteMany()
  await prisma.productOption.deleteMany()
  await prisma.review.deleteMany()
  await prisma.orderItem.deleteMany()
  await prisma.order.deleteMany()
  await prisma.product.deleteMany()
  await prisma.category.deleteMany()
  await prisma.manufacturer.deleteMany()

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π...')

  const categories = await Promise.all([
    prisma.category.create({
      data: {
        name: '–ó–∞–ø—á–∞—Å—Ç–∏–Ω–∏ –¥–≤–∏–≥—É–Ω–∞',
        children: {
          create: [
            { name: '–§—ñ–ª—å—Ç—Ä–∏' },
            { name: '–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è' },
            { name: '–†–µ–º–µ–Ω—ñ' },
            { name: '–ú–∞—Å–ª–∞ —Ç–∞ —Ä—ñ–¥–∏–Ω–∏' },
            { name: '–ü—Ä–æ–∫–ª–∞–¥–∫–∏' },
            { name: '–ü–æ—Ä—à–Ω—ñ —Ç–∞ —Ü–∏–ª—ñ–Ω–¥—Ä–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–ì–∞–ª—å–º—ñ–≤–Ω–∞ —Å–∏—Å—Ç–µ–º–∞',
        children: {
          create: [
            { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏' },
            { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –¥–∏—Å–∫–∏' },
            { name: '–ì–∞–ª—å–º—ñ–≤–Ω–∞ —Ä—ñ–¥–∏–Ω–∞' },
            { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ —à–ª–∞–Ω–≥–∏' },
            { name: '–°—É–ø–ø–æ—Ä—Ç–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–ü—ñ–¥–≤—ñ—Å–∫–∞',
        children: {
          create: [
            { name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–∏' },
            { name: '–ü—Ä—É–∂–∏–Ω–∏' },
            { name: '–í—Ç—É–ª–∫–∏' },
            { name: '–°—Ç–∞–±—ñ–ª—ñ–∑–∞—Ç–æ—Ä–∏' },
            { name: '–°–∞–π–ª–µ–Ω—Ç–±–ª–æ–∫–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–ï–ª–µ–∫—Ç—Ä–∏–∫–∞',
        children: {
          create: [
            { name: '–ê–∫—É–º—É–ª—è—Ç–æ—Ä–∏' },
            { name: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∏' },
            { name: '–°—Ç–∞—Ä—Ç–µ—Ä–∏' },
            { name: '–õ–∞–º–ø–∏' },
            { name: '–ó–∞–ø–æ–±—ñ–∂–Ω–∏–∫–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–ö—É–∑–æ–≤',
        children: {
          create: [
            { name: '–§–∞—Ä–∏' },
            { name: '–î–∑–µ—Ä–∫–∞–ª–∞' },
            { name: '–ë–∞–º–ø–µ—Ä–∏' },
            { name: '–†–µ—à—ñ—Ç–∫–∏ —Ä–∞–¥—ñ–∞—Ç–æ—Ä–∞' },
            { name: '–ú–æ–ª–¥–∏–Ω–≥–∏' }
          ]
        }
      }
    }),
    prisma.category.create({
      data: {
        name: '–¢—Ä–∞–Ω—Å–º—ñ—Å—ñ—è',
        children: {
          create: [
            { name: '–ó—á–µ–ø–ª–µ–Ω–Ω—è' },
            { name: '–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á' },
            { name: '–ö–∞—Ä–¥–∞–Ω–Ω—ñ –≤–∞–ª–∏' },
            { name: '–î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ–∞–ª–∏' }
          ]
        }
      }
    })
  ])

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤...')

  const manufacturers = await Promise.all([
    prisma.manufacturer.create({ data: { name: 'Bosch' } }),
    prisma.manufacturer.create({ data: { name: 'Mann Filter' } }),
    prisma.manufacturer.create({ data: { name: 'NGK' } }),
    prisma.manufacturer.create({ data: { name: 'Gates' } }),
    prisma.manufacturer.create({ data: { name: 'Castrol' } }),
    prisma.manufacturer.create({ data: { name: 'Brembo' } }),
    prisma.manufacturer.create({ data: { name: 'Sachs' } }),
    prisma.manufacturer.create({ data: { name: 'Monroe' } }),
    prisma.manufacturer.create({ data: { name: 'Varta' } }),
    prisma.manufacturer.create({ data: { name: 'Hella' } }),
    prisma.manufacturer.create({ data: { name: 'Mobil 1' } }),
    prisma.manufacturer.create({ data: { name: 'Shell' } }),
    prisma.manufacturer.create({ data: { name: 'Denso' } }),
    prisma.manufacturer.create({ data: { name: 'Valeo' } }),
    prisma.manufacturer.create({ data: { name: 'Continental' } })
  ])

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Ä–æ–∫ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤...')

  const carMakes = await Promise.all([
    prisma.carMake.create({
      data: {
        name: 'Toyota',
        models: {
          create: [
            {
              name: 'Camry',
              years: {
                create: [
                  {
                    year: 2018,
                    bodyTypes: {
                      create: [
                        {
                          name: '–°–µ–¥–∞–Ω',
                          engines: {
                            create: [
                              { name: '2.0L I4' },
                              { name: '2.5L I4 Hybrid' },
                              { name: '3.5L V6' }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    year: 2019,
                    bodyTypes: {
                      create: [
                        {
                          name: '–°–µ–¥–∞–Ω',
                          engines: {
                            create: [
                              { name: '2.0L I4' },
                              { name: '2.5L I4 Hybrid' },
                              { name: '3.5L V6' }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    year: 2020,
                    bodyTypes: {
                      create: [
                        {
                          name: '–°–µ–¥–∞–Ω',
                          engines: {
                            create: [
                              { name: '2.0L I4' },
                              { name: '2.5L I4 Hybrid' },
                              { name: '3.5L V6' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              name: 'RAV4',
              years: {
                create: [
                  {
                    year: 2019,
                    bodyTypes: {
                      create: [
                        {
                          name: 'SUV',
                          engines: {
                            create: [
                              { name: '2.0L I4' },
                              { name: '2.5L I4 Hybrid' }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    year: 2020,
                    bodyTypes: {
                      create: [
                        {
                          name: 'SUV',
                          engines: {
                            create: [
                              { name: '2.0L I4' },
                              { name: '2.5L I4 Hybrid' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              name: 'Corolla',
              years: {
                create: [
                  {
                    year: 2019,
                    bodyTypes: {
                      create: [
                        {
                          name: '–°–µ–¥–∞–Ω',
                          engines: {
                            create: [
                              { name: '1.8L I4' },
                              { name: '1.8L I4 Hybrid' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'BMW',
        models: {
          create: [
            {
              name: 'X5',
              years: {
                create: [
                  {
                    year: 2018,
                    bodyTypes: {
                      create: [
                        {
                          name: 'SUV',
                          engines: {
                            create: [
                              { name: '3.0L I6 Turbo' },
                              { name: '4.4L V8 Turbo' }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    year: 2019,
                    bodyTypes: {
                      create: [
                        {
                          name: 'SUV',
                          engines: {
                            create: [
                              { name: '3.0L I6 Turbo' },
                              { name: '4.4L V8 Turbo' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              name: '3 Series',
              years: {
                create: [
                  {
                    year: 2019,
                    bodyTypes: {
                      create: [
                        {
                          name: '–°–µ–¥–∞–Ω',
                          engines: {
                            create: [
                              { name: '2.0L I4 Turbo' },
                              { name: '3.0L I6 Turbo' }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    year: 2020,
                    bodyTypes: {
                      create: [
                        {
                          name: '–°–µ–¥–∞–Ω',
                          engines: {
                            create: [
                              { name: '2.0L I4 Turbo' },
                              { name: '3.0L I6 Turbo' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              name: 'X3',
              years: {
                create: [
                  {
                    year: 2019,
                    bodyTypes: {
                      create: [
                        {
                          name: 'SUV',
                          engines: {
                            create: [
                              { name: '2.0L I4 Turbo' },
                              { name: '3.0L I6 Turbo' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Volkswagen',
        models: {
          create: [
            {
              name: 'Golf',
              years: {
                create: [
                  {
                    year: 2018,
                    bodyTypes: {
                      create: [
                        {
                          name: '–•–µ—Ç—á–±–µ–∫',
                          engines: {
                            create: [
                              { name: '1.4L TSI' },
                              { name: '2.0L TSI' }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    year: 2019,
                    bodyTypes: {
                      create: [
                        {
                          name: '–•–µ—Ç—á–±–µ–∫',
                          engines: {
                            create: [
                              { name: '1.4L TSI' },
                              { name: '2.0L TSI' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              name: 'Passat',
              years: {
                create: [
                  {
                    year: 2018,
                    bodyTypes: {
                      create: [
                        {
                          name: '–°–µ–¥–∞–Ω',
                          engines: {
                            create: [
                              { name: '1.8L TSI' },
                              { name: '2.0L TSI' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Mercedes-Benz',
        models: {
          create: [
            {
              name: 'C-Class',
              years: {
                create: [
                  {
                    year: 2019,
                    bodyTypes: {
                      create: [
                        {
                          name: '–°–µ–¥–∞–Ω',
                          engines: {
                            create: [
                              { name: '1.5L I4 Turbo' },
                              { name: '2.0L I4 Turbo' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              name: 'GLE',
              years: {
                create: [
                  {
                    year: 2020,
                    bodyTypes: {
                      create: [
                        {
                          name: 'SUV',
                          engines: {
                            create: [
                              { name: '2.0L I4 Turbo' },
                              { name: '3.0L V6 Turbo' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    }),
    prisma.carMake.create({
      data: {
        name: 'Audi',
        models: {
          create: [
            {
              name: 'A4',
              years: {
                create: [
                  {
                    year: 2018,
                    bodyTypes: {
                      create: [
                        {
                          name: '–°–µ–¥–∞–Ω',
                          engines: {
                            create: [
                              { name: '2.0L I4 Turbo' },
                              { name: '3.0L V6 Turbo' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              name: 'Q5',
              years: {
                create: [
                  {
                    year: 2019,
                    bodyTypes: {
                      create: [
                        {
                          name: 'SUV',
                          engines: {
                            create: [
                              { name: '2.0L I4 Turbo' },
                              { name: '3.0L V6 Turbo' }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    })
  ])

  const filterCategory = await prisma.category.findFirst({
    where: { name: '–§—ñ–ª—å—Ç—Ä–∏' }
  })

  const sparkPlugsCategory = await prisma.category.findFirst({
    where: { name: '–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è' }
  })

  const brakeCategory = await prisma.category.findFirst({
    where: { name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏' }
  })

  const oilCategory = await prisma.category.findFirst({
    where: { name: '–ú–∞—Å–ª–∞ —Ç–∞ —Ä—ñ–¥–∏–Ω–∏' }
  })

  const batteryCategory = await prisma.category.findFirst({
    where: { name: '–ê–∫—É–º—É–ª—è—Ç–æ—Ä–∏' }
  })

  const shockAbsorberCategory = await prisma.category.findFirst({
    where: { name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–∏' }
  })

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤...')

  const products = await Promise.all([
    prisma.product.create({
      data: {
        name: '–ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Bosch S0123',
        description: '–í–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–π –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –¥–ª—è –±—ñ–ª—å—à–æ—Å—Ç—ñ —è–ø–æ–Ω—Å—å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤. –ó–∞–±–µ–∑–ø–µ—á—É—î –æ–ø—Ç–∏–º–∞–ª—å–Ω—É —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é –ø–æ–≤—ñ—Ç—Ä—è —Ç–∞ –∑–∞—Ö–∏—Å—Ç –¥–≤–∏–≥—É–Ω–∞.',
        price: 850.00,
        stockQuantity: 25,
        categoryId: filterCategory!.id,
        manufacturerId: manufacturers[0].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª', value: '–ü–∞–ø–µ—Ä–æ–≤–∏–π' },
            { name: '–§–æ—Ä–º–∞', value: '–ü—Ä—è–º–æ–∫—É—Ç–Ω–∞' },
            { name: '–†–æ–∑–º—ñ—Ä', value: '280x215x58 –º–º' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Mann W 712/75',
        description: '–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –Ω—ñ–º–µ—Ü—å–∫–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞. –í—ñ–¥–º—ñ–Ω–Ω–∞ —è–∫—ñ—Å—Ç—å —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Ç–∞ –¥–æ–≤–≥–æ–≤—ñ—á–Ω—ñ—Å—Ç—å.',
        price: 320.00,
        stockQuantity: 50,
        categoryId: filterCategory!.id,
        manufacturerId: manufacturers[1].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–¢–∏–ø', value: '–ù–∞–∫—Ä—É—á—É–≤–∞–ª—å–Ω–∏–π' },
            { name: '–î—ñ–∞–º–µ—Ç—Ä', value: '76 –º–º' },
            { name: '–í–∏—Å–æ—Ç–∞', value: '79 –º–º' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä Bosch F 026 402 067',
        description: '–ù–∞–¥—ñ–π–Ω–∏–π –ø–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø–∞–ª–∏–≤–∞ –≤—ñ–¥ –∑–∞–±—Ä—É–¥–Ω–µ–Ω—å —Ç–∞ –≤–æ–¥–∏.',
        price: 450.00,
        stockQuantity: 30,
        categoryId: filterCategory!.id,
        manufacturerId: manufacturers[0].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–¢–∏–ø', value: '–õ—ñ–Ω—ñ–π–Ω–∏–π' },
            { name: '–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è', value: 'Push-in' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–°–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è NGK BKR6E-11',
        description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —Å–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è –∑ –Ω—ñ–∫–µ–ª–µ–≤–∏–º –µ–ª–µ–∫—Ç—Ä–æ–¥–æ–º. –ó–∞–±–µ–∑–ø–µ—á—É—î —Å—Ç–∞–±—ñ–ª—å–Ω–µ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è.',
        price: 180.00,
        stockQuantity: 100,
        categoryId: sparkPlugsCategory!.id,
        manufacturerId: manufacturers[2].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–ó–∞–∑–æ—Ä', value: '1.1 –º–º' },
            { name: '–†—ñ–∑—å–±–∞', value: 'M14x1.25' },
            { name: '–î–æ–≤–∂–∏–Ω–∞ —Ä—ñ–∑—å–±–∏', value: '19 –º–º' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–°–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è Denso IK20TT',
        description: '–Ü—Ä–∏–¥—ñ—î–≤–∞ —Å–≤—ñ—á–∫–∞ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è –ø—Ä–µ–º—ñ—É–º –∫–ª–∞—Å—É –¥–ª—è –ø—ñ–¥–≤–∏—â–µ–Ω–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ.',
        price: 380.00,
        stockQuantity: 60,
        categoryId: sparkPlugsCategory!.id,
        manufacturerId: manufacturers[12].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–ú–∞—Ç–µ—Ä—ñ–∞–ª –µ–ª–µ–∫—Ç—Ä–æ–¥–∞', value: '–Ü—Ä–∏–¥—ñ–π' },
            { name: '–ó–∞–∑–æ—Ä', value: '0.8 –º–º' },
            { name: '–†—ñ–∑—å–±–∞', value: 'M14x1.25' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ Brembo P 83 140',
        description: '–ü–µ—Ä–µ–¥–Ω—ñ –≥–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ –¥–ª—è —î–≤—Ä–æ–ø–µ–π—Å—å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤. –í—ñ–¥–º—ñ–Ω–Ω–µ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è —Ç–∞ –¥–æ–≤–≥–æ–≤—ñ—á–Ω—ñ—Å—Ç—å.',
        price: 2800.00,
        stockQuantity: 15,
        categoryId: brakeCategory!.id,
        manufacturerId: manufacturers[5].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ü–µ—Ä–µ–¥–Ω—è –≤—ñ—Å—å' },
            { name: '–¢–æ–≤—â–∏–Ω–∞', value: '17.5 –º–º' },
            { name: '–®–∏—Ä–∏–Ω–∞', value: '131.4 –º–º' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ Bosch 0 986 494 293',
        description: '–ó–∞–¥–Ω—ñ –≥–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ –¥–ª—è –ª–µ–≥–∫–æ–≤–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –∑ –∫–µ—Ä–∞–º—ñ—á–Ω–∏–º –ø–æ–∫—Ä–∏—Ç—Ç—è–º.',
        price: 1850.00,
        stockQuantity: 20,
        categoryId: brakeCategory!.id,
        manufacturerId: manufacturers[0].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ó–∞–¥–Ω—è –≤—ñ—Å—å' },
            { name: '–¢–æ–≤—â–∏–Ω–∞', value: '16.8 –º–º' },
            { name: '–¢–∏–ø', value: '–ö–µ—Ä–∞–º—ñ—á–Ω—ñ' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Castrol GTX 5W-30',
        description: '–ù–∞–ø—ñ–≤—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ –¥–ª—è –±–µ–Ω–∑–∏–Ω–æ–≤–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤. –ó–∞–±–µ–∑–ø–µ—á—É—î –Ω–∞–¥—ñ–π–Ω–∏–π –∑–∞—Ö–∏—Å—Ç –¥–≤–∏–≥—É–Ω–∞.',
        price: 1600.00,
        stockQuantity: 40,
        categoryId: oilCategory!.id,
        manufacturerId: manufacturers[4].id,
        isVariant: false,
        variants: {
          create: [
            {
              name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Castrol GTX 5W-30 (1L)',
              description: '–ù–∞–ø—ñ–≤—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ –¥–ª—è –±–µ–Ω–∑–∏–Ω–æ–≤–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤ - 1 –ª—ñ—Ç—Ä',
              price: 350.00,
              stockQuantity: 80,
              categoryId: oilCategory!.id,
              manufacturerId: manufacturers[4].id,
              isVariant: true,
              productOptions: {
                create: [
                  { name: "–û–±'—î–º", value: '1 –ª—ñ—Ç—Ä' }
                ]
              }
            },
            {
              name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Castrol GTX 5W-30 (5L)',
              description: '–ù–∞–ø—ñ–≤—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ –¥–ª—è –±–µ–Ω–∑–∏–Ω–æ–≤–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤ - 5 –ª—ñ—Ç—Ä—ñ–≤',
              price: 1600.00,
              stockQuantity: 40,
              categoryId: oilCategory!.id,
              manufacturerId: manufacturers[4].id,
              isVariant: true,
              productOptions: {
                create: [
                  { name: "–û–±'—î–º", value: '5 –ª—ñ—Ç—Ä—ñ–≤' }
                ]
              }
            }
          ]
        },
        productOptions: {
          create: [
            { name: "–í'—è–∑–∫—ñ—Å—Ç—å", value: '5W-30' },
            { name: '–¢–∏–ø', value: '–ù–∞–ø—ñ–≤—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞' },
            { name: '–°–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è', value: 'API SN/CF' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ Mobil 1 ESP 0W-30',
        description: '–ü–æ–≤–Ω—ñ—Å—Ç—é —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞ –ø—Ä–µ–º—ñ—É–º –∫–ª–∞—Å—É –¥–ª—è —Å—É—á–∞—Å–Ω–∏—Ö –¥–≤–∏–≥—É–Ω—ñ–≤.',
        price: 2200.00,
        stockQuantity: 25,
        categoryId: oilCategory!.id,
        manufacturerId: manufacturers[10].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: "–í'—è–∑–∫—ñ—Å—Ç—å", value: '0W-30' },
            { name: '–¢–∏–ø', value: '–ü–æ–≤–Ω—ñ—Å—Ç—é —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞' },
            { name: "–û–±'—î–º", value: '4 –ª—ñ—Ç—Ä–∏' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–∫—É–º—É–ª—è—Ç–æ—Ä Varta Blue Dynamic E11',
        description: '–ù–∞–¥—ñ–π–Ω–∏–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏–π –∞–∫—É–º—É–ª—è—Ç–æ—Ä –∑ –≤–∏—Å–æ–∫–æ—é –ø—É—Å–∫–æ–≤–æ—é –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—é.',
        price: 3200.00,
        stockQuantity: 12,
        categoryId: batteryCategory!.id,
        manufacturerId: manufacturers[8].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–Ñ–º–Ω—ñ—Å—Ç—å', value: '74 Ah' },
            { name: '–ü—É—Å–∫–æ–≤–∏–π —Å—Ç—Ä—É–º', value: '680 A' },
            { name: '–ü–æ–ª—è—Ä–Ω—ñ—Å—Ç—å', value: '–ü—Ä—è–º–∞' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä Monroe G7423',
        description: '–ü–µ—Ä–µ–¥–Ω—ñ–π –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä –≥–∞–∑–æ–≤–∏–π –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ—ó —ó–∑–¥–∏ —Ç–∞ —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ.',
        price: 1850.00,
        stockQuantity: 18,
        categoryId: shockAbsorberCategory!.id,
        manufacturerId: manufacturers[7].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–¢–∏–ø', value: '–ì–∞–∑–æ–≤–∏–π' },
            { name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ü–µ—Ä–µ–¥–Ω—è –≤—ñ—Å—å' },
            { name: '–°–ø–æ—Å—ñ–± –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è', value: '–ó–Ω–∏–∑—É –±–æ–ª—Ç' }
          ]
        }
      }
    }),
    prisma.product.create({
      data: {
        name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä Sachs 314 855',
        description: '–ó–∞–¥–Ω—ñ–π –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä –º–∞—Å–ª—è–Ω–∏–π –¥–ª—è —î–≤—Ä–æ–ø–µ–π—Å—å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤.',
        price: 1650.00,
        stockQuantity: 22,
        categoryId: shockAbsorberCategory!.id,
        manufacturerId: manufacturers[6].id,
        isVariant: false,
        productOptions: {
          create: [
            { name: '–¢–∏–ø', value: '–ú–∞—Å–ª—è–Ω–∏–π' },
            { name: '–ü–æ–ª–æ–∂–µ–Ω–Ω—è', value: '–ó–∞–¥–Ω—è –≤—ñ—Å—å' },
            { name: '–°–ø–æ—Å—ñ–± –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è', value: '–ó–Ω–∏–∑—É –≤—É—Ö–æ' }
          ]
        }
      }
    })
  ])

  console.log('üå± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ –∑ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è–º–∏...')

  const toyotaCamry2018 = await prisma.carYear.findFirst({
    where: {
      year: 2018,
      model: {
        name: 'Camry',
        make: { name: 'Toyota' }
      }
    },
    include: {
      model: { include: { make: true } },
      bodyTypes: { include: { engines: true } }
    }
  })

  const toyotaRav42019 = await prisma.carYear.findFirst({
    where: {
      year: 2019,
      model: {
        name: 'RAV4',
        make: { name: 'Toyota' }
      }
    },
    include: {
      model: { include: { make: true } },
      bodyTypes: { include: { engines: true } }
    }
  })

  const bmwX52018 = await prisma.carYear.findFirst({
    where: {
      year: 2018,
      model: {
        name: 'X5',
        make: { name: 'BMW' }
      }
    },
    include: {
      model: { include: { make: true } },
      bodyTypes: { include: { engines: true } }
    }
  })

  const bmw3Series2019 = await prisma.carYear.findFirst({
    where: {
      year: 2019,
      model: {
        name: '3 Series',
        make: { name: 'BMW' }
      }
    },
    include: {
      model: { include: { make: true } },
      bodyTypes: { include: { engines: true } }
    }
  })

  const vwGolf2018 = await prisma.carYear.findFirst({
    where: {
      year: 2018,
      model: {
        name: 'Golf',
        make: { name: 'Volkswagen' }
      }
    },
    include: {
      model: { include: { make: true } },
      bodyTypes: { include: { engines: true } }
    }
  })

  const compatibilities = []

  if (toyotaCamry2018 && products[0]) {
    const bodyType = toyotaCamry2018.bodyTypes[0]
    const engine = bodyType.engines[0]
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: products[0].id,
          carMakeId: toyotaCamry2018.model.make.id,
          carModelId: toyotaCamry2018.model.id,
          carYearId: toyotaCamry2018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  if (toyotaRav42019 && products[0]) {
    const bodyType = toyotaRav42019.bodyTypes[0]
    const engine = bodyType.engines[0]
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: products[0].id,
          carMakeId: toyotaRav42019.model.make.id,
          carModelId: toyotaRav42019.model.id,
          carYearId: toyotaRav42019.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  if (bmwX52018 && products[5]) {
    const bodyType = bmwX52018.bodyTypes[0]
    const engine = bodyType.engines[0]
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: products[5].id,
          carMakeId: bmwX52018.model.make.id,
          carModelId: bmwX52018.model.id,
          carYearId: bmwX52018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  if (bmw3Series2019 && products[3]) {
    const bodyType = bmw3Series2019.bodyTypes[0]
    const engine = bodyType.engines[0]
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: products[3].id,
          carMakeId: bmw3Series2019.model.make.id,
          carModelId: bmw3Series2019.model.id,
          carYearId: bmw3Series2019.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  if (vwGolf2018 && products[4]) {
    const bodyType = vwGolf2018.bodyTypes[0]
    const engine = bodyType.engines[0]
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: products[4].id,
          carMakeId: vwGolf2018.model.make.id,
          carModelId: vwGolf2018.model.id,
          carYearId: vwGolf2018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  if (toyotaCamry2018 && products[7]) {
    const bodyType = toyotaCamry2018.bodyTypes[0]
    const engine = bodyType.engines[1]
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: products[7].id,
          carMakeId: toyotaCamry2018.model.make.id,
          carModelId: toyotaCamry2018.model.id,
          carYearId: toyotaCamry2018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  if (bmwX52018 && products[8]) {
    const bodyType = bmwX52018.bodyTypes[0]
    const engine = bodyType.engines[1]
    compatibilities.push(
      prisma.compatibility.create({
        data: {
          productId: products[8].id,
          carMakeId: bmwX52018.model.make.id,
          carModelId: bmwX52018.model.id,
          carYearId: bmwX52018.id,
          carBodyTypeId: bodyType.id,
          carEngineId: engine.id
        }
      })
    )
  }

  await Promise.all(compatibilities)

  console.log('‚úÖ Seeding –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!')
  console.log(`üìä –°—Ç–≤–æ—Ä–µ–Ω–æ:
  - ${categories.length} –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∑ –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
  - ${manufacturers.length} –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤
  - ${carMakes.length} –º–∞—Ä–æ–∫ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –∑ –º–æ–¥–µ–ª—è–º–∏
  - ${products.length} –æ—Å–Ω–æ–≤–Ω–∏—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
  - ${compatibilities.length} –∑–≤'—è–∑–∫—ñ–≤ —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ`)
}

main()
  .then(async () => {
    await prisma.$disconnect()
  })
  .catch(async (e) => {
    console.error(e)
    await prisma.$disconnect()
    process.exit(1)
  })
